/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import { core, connectionPluginCore } from "@nexus/schema"

declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    connectionField<FieldName extends string>(
            fieldName: FieldName, 
            config: connectionPluginCore.ConnectionFieldConfig<TypeName, FieldName> 
          ): void
  }
}
declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  ApplicationWhereUniqueInput: { // input type
    id?: string | null; // String
  }
  CoursePageWhereUniqueInput: { // input type
    id?: string | null; // String
  }
  LessonWhereUniqueInput: { // input type
    forumId?: string | null; // String
    id?: string | null; // String
  }
  UserWhereUniqueInput: { // input type
    careerTrackId?: string | null; // String
    email?: string | null; // String
    id?: string | null; // String
    legalPortfolioId?: string | null; // String
    levelId?: string | null; // String
  }
}

export interface NexusGenEnums {
  CourseType: "CHALLENGE" | "FORMONEY" | "PRIVATE" | "PUBLIC" | "UNI"
  Status: "AUTHOR" | "HR" | "LAWYER" | "SAVVY_AUTHOR" | "STUDENT"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
  Json: any
}

export interface NexusGenRootTypes {
  Application: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  AuthPayload: { // root type
    token?: string | null; // String
    user?: NexusGenRootTypes['User'] | null; // User
  }
  Company: { // root type
    id: string; // String!
    name: string; // String!
  }
  CoursePage: { // root type
    audience?: string | null; // String
    banner?: string | null; // String
    batch?: string | null; // String
    courseType?: NexusGenEnums['CourseType'] | null; // CourseType
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    description: string; // String!
    discountPrice?: number | null; // Int
    id: string; // String!
    image: string; // String!
    methods?: string | null; // String
    news?: string | null; // String
    price?: number | null; // Int
    promocode: NexusGenScalars['Json'][]; // [Json!]!
    published?: boolean | null; // Boolean
    result?: string | null; // String
    reviews?: NexusGenScalars['Json'] | null; // Json
    students: string[]; // [String!]!
    subscription?: boolean | null; // Boolean
    subscriptionPrice?: number | null; // Int
    tags: string[]; // [String!]!
    tariffs?: string | null; // String
    title: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    video?: string | null; // String
    weeks?: number | null; // Int
  }
  Lesson: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Mutation: {};
  Query: {};
  SignOut: { // root type
    message?: string | null; // String
  }
  Uni: { // root type
    capacity?: number | null; // Int
    id: string; // String!
    paidMonths?: number | null; // Int
    title: string; // String!
  }
  User: { // root type
    description?: string | null; // String
    email: string; // String!
    id: string; // String!
    name: string; // String!
    password: string; // String!
    resume?: string | null; // String
    status?: string | null; // String
    surname?: string | null; // String
  }
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  ApplicationWhereUniqueInput: NexusGenInputs['ApplicationWhereUniqueInput'];
  CoursePageWhereUniqueInput: NexusGenInputs['CoursePageWhereUniqueInput'];
  LessonWhereUniqueInput: NexusGenInputs['LessonWhereUniqueInput'];
  UserWhereUniqueInput: NexusGenInputs['UserWhereUniqueInput'];
  CourseType: NexusGenEnums['CourseType'];
  Status: NexusGenEnums['Status'];
  String: NexusGenScalars['String'];
  Int: NexusGenScalars['Int'];
  Float: NexusGenScalars['Float'];
  Boolean: NexusGenScalars['Boolean'];
  ID: NexusGenScalars['ID'];
  DateTime: NexusGenScalars['DateTime'];
  Json: NexusGenScalars['Json'];
}

export interface NexusGenFieldTypes {
  Application: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  AuthPayload: { // field return type
    token: string | null; // String
    user: NexusGenRootTypes['User'] | null; // User
  }
  Company: { // field return type
    id: string; // String!
    name: string; // String!
  }
  CoursePage: { // field return type
    applications: NexusGenRootTypes['Application'][]; // [Application!]!
    audience: string | null; // String
    authors: NexusGenRootTypes['User'][]; // [User!]!
    banner: string | null; // String
    batch: string | null; // String
    company: NexusGenRootTypes['Company'] | null; // Company
    courseType: NexusGenEnums['CourseType'] | null; // CourseType
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    description: string; // String!
    discountPrice: number | null; // Int
    id: string; // String!
    image: string; // String!
    lessons: NexusGenRootTypes['Lesson'][]; // [Lesson!]!
    methods: string | null; // String
    new_students: NexusGenRootTypes['User'][]; // [User!]!
    news: string | null; // String
    price: number | null; // Int
    promocode: NexusGenScalars['Json'][]; // [Json!]!
    published: boolean | null; // Boolean
    result: string | null; // String
    reviews: NexusGenScalars['Json'] | null; // Json
    students: string[]; // [String!]!
    subscription: boolean | null; // Boolean
    subscriptionPrice: number | null; // Int
    tags: string[]; // [String!]!
    tariffs: string | null; // String
    title: string; // String!
    uni: NexusGenRootTypes['Uni'] | null; // Uni
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    user: NexusGenRootTypes['User']; // User!
    video: string | null; // String
    weeks: number | null; // Int
  }
  Lesson: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Mutation: { // field return type
    createCoursePage: NexusGenRootTypes['CoursePage'] | null; // CoursePage
    signin: NexusGenRootTypes['AuthPayload'] | null; // AuthPayload
    signout: NexusGenRootTypes['SignOut'] | null; // SignOut
    signup: NexusGenRootTypes['AuthPayload'] | null; // AuthPayload
  }
  Query: { // field return type
    coursePages: NexusGenRootTypes['CoursePage'][]; // [CoursePage!]!
    me: NexusGenRootTypes['User'] | null; // User
    users: NexusGenRootTypes['User'][]; // [User!]!
  }
  SignOut: { // field return type
    message: string | null; // String
  }
  Uni: { // field return type
    capacity: number | null; // Int
    id: string; // String!
    paidMonths: number | null; // Int
    teachers: NexusGenRootTypes['User'][]; // [User!]!
    title: string; // String!
  }
  User: { // field return type
    company: NexusGenRootTypes['Company'] | null; // Company
    coursePages: NexusGenRootTypes['CoursePage'][]; // [CoursePage!]!
    description: string | null; // String
    email: string; // String!
    id: string; // String!
    name: string; // String!
    password: string; // String!
    resume: string | null; // String
    status: string | null; // String
    surname: string | null; // String
    uni: NexusGenRootTypes['Uni'] | null; // Uni
  }
}

export interface NexusGenFieldTypeNames {
  Application: { // field return type name
    createdAt: 'DateTime'
    id: 'String'
    updatedAt: 'DateTime'
  }
  AuthPayload: { // field return type name
    token: 'String'
    user: 'User'
  }
  Company: { // field return type name
    id: 'String'
    name: 'String'
  }
  CoursePage: { // field return type name
    applications: 'Application'
    audience: 'String'
    authors: 'User'
    banner: 'String'
    batch: 'String'
    company: 'Company'
    courseType: 'CourseType'
    createdAt: 'DateTime'
    description: 'String'
    discountPrice: 'Int'
    id: 'String'
    image: 'String'
    lessons: 'Lesson'
    methods: 'String'
    new_students: 'User'
    news: 'String'
    price: 'Int'
    promocode: 'Json'
    published: 'Boolean'
    result: 'String'
    reviews: 'Json'
    students: 'String'
    subscription: 'Boolean'
    subscriptionPrice: 'Int'
    tags: 'String'
    tariffs: 'String'
    title: 'String'
    uni: 'Uni'
    updatedAt: 'DateTime'
    user: 'User'
    video: 'String'
    weeks: 'Int'
  }
  Lesson: { // field return type name
    createdAt: 'DateTime'
    id: 'String'
    updatedAt: 'DateTime'
  }
  Mutation: { // field return type name
    createCoursePage: 'CoursePage'
    signin: 'AuthPayload'
    signout: 'SignOut'
    signup: 'AuthPayload'
  }
  Query: { // field return type name
    coursePages: 'CoursePage'
    me: 'User'
    users: 'User'
  }
  SignOut: { // field return type name
    message: 'String'
  }
  Uni: { // field return type name
    capacity: 'Int'
    id: 'String'
    paidMonths: 'Int'
    teachers: 'User'
    title: 'String'
  }
  User: { // field return type name
    company: 'Company'
    coursePages: 'CoursePage'
    description: 'String'
    email: 'String'
    id: 'String'
    name: 'String'
    password: 'String'
    resume: 'String'
    status: 'String'
    surname: 'String'
    uni: 'Uni'
  }
}

export interface NexusGenArgTypes {
  CoursePage: {
    applications: { // args
      after?: NexusGenInputs['ApplicationWhereUniqueInput'] | null; // ApplicationWhereUniqueInput
      before?: NexusGenInputs['ApplicationWhereUniqueInput'] | null; // ApplicationWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
    authors: { // args
      after?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      before?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
    lessons: { // args
      after?: NexusGenInputs['LessonWhereUniqueInput'] | null; // LessonWhereUniqueInput
      before?: NexusGenInputs['LessonWhereUniqueInput'] | null; // LessonWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
    new_students: { // args
      after?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      before?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  Mutation: {
    createCoursePage: { // args
      courseType?: string | null; // String
      description?: string | null; // String
      image?: string | null; // String
      published?: boolean | null; // Boolean
      title?: string | null; // String
    }
    signin: { // args
      email?: string | null; // String
      password?: string | null; // String
    }
    signup: { // args
      careerTrackID?: string | null; // String
      company?: string | null; // String
      email?: string | null; // String
      name?: string | null; // String
      password?: string | null; // String
      surname?: string | null; // String
      uniID?: string | null; // String
    }
  }
  Query: {
    coursePages: { // args
      after?: NexusGenInputs['CoursePageWhereUniqueInput'] | null; // CoursePageWhereUniqueInput
      before?: NexusGenInputs['CoursePageWhereUniqueInput'] | null; // CoursePageWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
    users: { // args
      after?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      before?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  Uni: {
    teachers: { // args
      after?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      before?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  User: {
    coursePages: { // args
      after?: NexusGenInputs['CoursePageWhereUniqueInput'] | null; // CoursePageWhereUniqueInput
      before?: NexusGenInputs['CoursePageWhereUniqueInput'] | null; // CoursePageWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Application" | "AuthPayload" | "Company" | "CoursePage" | "Lesson" | "Mutation" | "Query" | "SignOut" | "Uni" | "User";

export type NexusGenInputNames = "ApplicationWhereUniqueInput" | "CoursePageWhereUniqueInput" | "LessonWhereUniqueInput" | "UserWhereUniqueInput";

export type NexusGenEnumNames = "CourseType" | "Status";

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "DateTime" | "Float" | "ID" | "Int" | "Json" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
    
  }
  interface NexusGenPluginSchemaConfig {
  }
}